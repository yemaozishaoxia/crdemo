<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chatroom.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.chatroom.entity.User">
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, email, password, username
  </sql>
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="findUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where email = #{email,jdbcType=VARCHAR}
    </select>
    <select id="findUserByUser" parameterType="com.example.chatroom.entity.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where (email = #{email,jdbcType=VARCHAR} or username = #{username,jdbcType=VARCHAR} )and
        password = #{password,jdbcType=VARCHAR}
    </select>
    <insert id="insert" parameterType="com.example.chatroom.entity.User">
    insert into users (id, email, password, 
      username)
    values (#{id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR})
  </insert>
    <delete id="deleteUserById" parameterType="java.lang.Long">
        delete from users where id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>